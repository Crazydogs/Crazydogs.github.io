---
layout: post
title:  "CSS transform 原理"
date:   2017-04-15 22:13:00
category: coding
---

## transform 是什么

CSS 中的 transform 属性，主要用于对元素添加一个变形。可以理解为浏览器完成元素的基本渲染之后，
最后加的一层，并不会对文本流产生任何的影响，其实与 position: relative 的效果一样，
不过不用占用 position 这么重要的一个属性，可以做的变换也不只是平移。

先说 2D 的变换，不涉及 3D。transform 能做的变换有这几种 [demo](http://baidu.com)，
分别是缩放、斜切、旋转、平移，以及他们的组合，其中前三个是线性变换。但如果查一下手册，
就会发现，2D 变换中还有一个叫 matrix 的带六个参数的变换。其实平时很少会直接用到 matrix
变换，但对于理解 transform 属性至关重要

matrix 的六个参数是对应一个 3*3 矩阵中的六个变量

{% highlight %}
 -     -
| a c e |
| b d f |
| 0 0 1 |
 -     -
{% endhighlight %}

这个矩阵就是 transform 变换的线性变换矩阵。

## 线性变换与变换矩阵

这里须要补充一点线性代数的知识了。

首先，什么叫线性变换呢。变换，表示的是一种映射关系，而线性变换，指的是原空间映射到目标空间之后，
依然保持线性关系的变换。

平时我们在 CSS 中定位，使用的是平面直角坐标系，通常用一对数值来表示二维空间中的一个点，
比如 (1, -3) 或者 (0, 0) 之类的，一个是 x 坐标，一个是 y 坐标。

在线性代数里面，坐标可以理解为基向量（也就是在 x 轴上面的单位向量和 y 轴上面的单位向量）的缩放倍数。
也就是说点 (1, 4) 可以理解为一个 ![公式1](http://crazydogs.github.io/images/css_transform_1.png)
这样的向量。

因为线性变换前后，线性关系保持不变，也就是说，进行了变换之后，
![公式1](http://crazydogs.github.io/images/css_transform_1.png) 这个式子依旧表示同一个点，
只不过他的位置相对于变换前的坐标系，产生了变化。也就是说，只要给出了线性变换后，
基向量相对于原坐标系的值，就能完整地定义这个变换了。

比如说我们进行一个 rotate(90deg) 的变换，那么原坐标系中的基向量 (1, 0)，(0, 1) 会以原点为中心，
顺时针旋转 90°。变成 (0, -1), (1, 0)。假设有一个点 a，在变换前坐标为 (1, 4)，
那变换后的坐标根据上面的公式，可以这样计算出他变换后在原坐标系下的坐标。

![公式1](http://crazydogs.github.io/images/css_transform_2.png)

那么就得到线性变换后相对于原坐标系的坐标 (4, -1)，非常完美的一个 90 度旋转。