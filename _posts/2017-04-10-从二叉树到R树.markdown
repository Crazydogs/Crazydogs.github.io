---
layout: post
title:  "从二叉树到 R 树"
date:   2017-04-08 01:55:00
category: coding
---

今天突然遇到一个数据库索引相关的问题，就顺便看了一下索引相关的原理，毕竟之前没有怎么了解过。
看到了些没看过的结构，还挺有趣的。

## 二叉搜索树

要维持一个有序索引，以提供快速的检索、插入、修改、范围查找功能，像链表这样的线性结构是不可能的了。
用二叉树代替索引的思路很自然，通过节点链接的分叉，压缩了每次查找时的路径长度，实现上也很简单。

普通的二叉树在正常情况下都可以工作得很好，但有个很严重的问题，那就是二叉树失衡。当数据是按顺序插入时，
二叉树虽然每个节点都有两个分支，但永远只有一个会被用到，也就是说退化成了链表。

## 平衡二叉树

为了保证二叉树的性能，须要一些额外的工作来保证它的平衡。平衡二叉树的方法有很多，
感觉最有意思的思路是 2-3 平衡树还有红黑树，将树的生长方向从树叶转化为树根，从而避免了失衡。
特别是红黑树，通过几个旋转操作，就能把 1 个二叉树变成 2-3 平衡树。

平衡二叉树解决了普通二叉树在特定情况下的性能问题，作为简单的索引应该是够了，
但如果用来作为数据库的索引，还是会有问题。那就是，二叉树的操作，并不是顺序寻址的，
是通过指针进行跳转的，而在数据库中，有可能从硬盘取值的时间，比计算的时间还要多很多，
二叉树的高度，还有压缩的空间。

## B 树

2-3 平衡树