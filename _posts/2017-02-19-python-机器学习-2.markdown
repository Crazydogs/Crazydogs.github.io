---
layout: post
title:  "Python 机器学习 - 预测分析核心算法(2)"
date:   2017-02-19 16:44:10
category: coding
---

[Python 机器学习 - 预测分析核心算法(1)](http://crazydogs.github.io/coding/2017/02/15/python-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-1.html)

## 第三章 预测模型的构建：平衡性能、复杂性以及大数据

### 函数逼近
函数逼近问题的目标是，构建以特征作为输入的函数来预测目标变量。

特征通常以矩阵的形式表示

{% highlight %}
    x11 x12 ... x1n
    x21 x22 ... x2n
X = ... ... ... ...
    ... ... ... ...
    xm1 xm2 ... xmn
{% endhighlight %}

预测目标值通常用向量 Y 表示

{% highlight %}
    y1
Y = y2
    ...
    ym
{% endhighlight %}

回归问题的本质就是寻找一个预测函数 pred()，使用它来预测结果

````
yt ~ pred(xt)
````
### 评估预测模型的性能

好的性能意味着使用属性 xi 来生成一个接近真是 yi 的预测。

1.对于回归问题，yi 是一个实数，性能用均方误差(MSE)或者平均绝对误差(MAE)度量
2.对于分类问题常用性能指标是误分类率

### 影响算法选择及性能的因素 — 复杂度与数据
- 对于列数比行数多的数据集（即数据不足的情况）或者简单的问题，倾向于使用线性模型。
- 对于行数比列数多很多的复杂问题，更倾向于使用线性模型
- 线性方法比非线性方法训练时间短
